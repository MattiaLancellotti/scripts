#!/bin/sh

# -- FUNCTION --
#        NAME: check_command
# DESCRIPTION: Checks whether a program is available through a built-in.
# PARAMETER 1: Program needed.
check_command() { command -v "$1" 1> /dev/null; }

# -- FUNCTION --
#        NAME: log, err
# DESCRIPTION: Reports messages, errors and warnings to the user.
# PARAMETER 1: The message to report.
log() { [ $# -gt 0 ] && echo ":: $1" >&1; }
err() { [ $# -gt 0 ] && echo "!! $1" >&1; }

# This script makes use of borgbackup to create backups. I don't know if it
# works for btrfs file systems or weird file systems. Only tried on ext4/3/2.
check_command borg || {
  err "You need borg to run this script.";
  exit 1;
}

# This scripts needs a partition that is going to save all your backups.
# It should already be mounted. If it does not, try adding it to your fstab.
BORG_DEVICE="/dev/sda6";

# More information to save into a backups.
KEYS_EXPORT="${HOME}/keys.gpg";

# As said before, the script needs this device to be already mounted. If it's
# not it is going to throw an error.
MOUNT_POINT=$(findmnt ${BORG_DEVICE} -n -o TARGET);
if [ -z "$MOUNT_POINT" ]; then
  err "The device ${BORG_DEVICE} is not mounted.";
  exit;
fi

# Exporting gpg keys
log "Exporting your gpg keys."
gpg --export --output $KEYS_EXPORT

# Creating a new backup
log "Creating your backup."
borg create --verbose --noatime \
  --stats --list --numeric-owner \
  --progress --comment "$1" \
  --compression auto,zstd,15 \
  "${MOUNT_POINT}/backups"::{user}-{now:%Y-%m-%dT%H:%M:%S} \
  /etc/ ${HOME}/music $KEYS_EXPORT ${HOME}/code ${HOME}/books \
  ${HOME}/uniud ${HOME}/documents ${HOME}/pictures /var/lib/portage \
  /proc/config.gz ${HOME}/.local/bin/dotfiles \
  --exclude-caches

# Deleting old backups
log "Deleting old backups."
borg prune --verbose --list \
  --prefix="{user}-" --keep-within=10d --keep-weekly=4 --keep-monthly=1 \
  "${MOUNT_POINT}/backups"

log "Deleting exported keys"
[ -f $KEYS_EXPORT ] && rm -v $KEYS_EXPORT
